<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhiqi.generator.mapper.GenTableMapper">

    <resultMap id="BaseResultMap" type="GenTable">
        <id property="tableId" column="table_id" jdbcType="BIGINT"/>
        <result property="tableName" column="table_name" jdbcType="VARCHAR"/>
        <result property="tableComment" column="table_comment" jdbcType="VARCHAR"/>
        <result property="subTableName" column="sub_table_name" jdbcType="VARCHAR"/>
        <result property="subTableFkName" column="sub_table_fk_name" jdbcType="VARCHAR"/>
        <result property="className" column="class_name" jdbcType="VARCHAR"/>
        <result property="tplCategory" column="tpl_category" jdbcType="VARCHAR"/>
        <result property="packageName" column="package_name" jdbcType="VARCHAR"/>
        <result property="moduleName" column="module_name" jdbcType="VARCHAR"/>
        <result property="businessName" column="business_name" jdbcType="VARCHAR"/>
        <result property="functionName" column="function_name" jdbcType="VARCHAR"/>
        <result property="functionAuthor" column="function_author" jdbcType="VARCHAR"/>
        <result property="genType" column="gen_type" jdbcType="CHAR"/>
        <result property="genPath" column="gen_path" jdbcType="VARCHAR"/>
        <result property="options" column="options" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <collection property="columns" javaType="java.util.List" resultMap="GenTableColumnResult"/>
    </resultMap>

    <resultMap id="GenTableColumnResult" type="GenTableColumn">
        <id property="columnId" column="column_id" jdbcType="BIGINT"/>
        <result property="tableId" column="table_id" jdbcType="VARCHAR"/>
        <result property="columnName" column="column_name" jdbcType="VARCHAR"/>
        <result property="columnComment" column="column_comment" jdbcType="VARCHAR"/>
        <result property="columnType" column="column_type" jdbcType="VARCHAR"/>
        <result property="javaType" column="java_type" jdbcType="VARCHAR"/>
        <result property="javaField" column="java_field" jdbcType="VARCHAR"/>
        <result property="isPk" column="is_pk" jdbcType="CHAR"/>
        <result property="isIncrement" column="is_increment" jdbcType="CHAR"/>
        <result property="isRequired" column="is_required" jdbcType="CHAR"/>
        <result property="isInsert" column="is_insert" jdbcType="CHAR"/>
        <result property="isEdit" column="is_edit" jdbcType="CHAR"/>
        <result property="isList" column="is_list" jdbcType="CHAR"/>
        <result property="isQuery" column="is_query" jdbcType="CHAR"/>
        <result property="queryType" column="query_type" jdbcType="VARCHAR"/>
        <result property="htmlType" column="html_type" jdbcType="VARCHAR"/>
        <result property="dictType" column="dict_type" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        table_id,table_name,table_comment,
        sub_table_name,sub_table_fk_name,class_name,
        tpl_category,package_name,module_name,
        business_name,function_name,function_author,
        gen_type,gen_path,options,
        create_by,create_time,update_by,
        update_time,remark
    </sql>


    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="tableId">
        insert into gen_table(table_name,table_comment,
        sub_table_name,sub_table_fk_name,class_name,
        tpl_category,package_name,module_name,
        business_name,function_name,function_author,
        gen_type,gen_path,options,
        create_by,create_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.tableName,jdbcType=VARCHAR},#{item.tableComment,jdbcType=VARCHAR},
            #{item.subTableName,jdbcType=VARCHAR},#{item.subTableFkName,jdbcType=VARCHAR},#{item.className,jdbcType=VARCHAR},
            #{item.tplCategory,jdbcType=VARCHAR},#{item.packageName,jdbcType=VARCHAR},#{item.moduleName,jdbcType=VARCHAR},
            #{item.businessName,jdbcType=VARCHAR},#{item.functionName,jdbcType=VARCHAR},#{item.functionAuthor,jdbcType=VARCHAR},
            #{item.genType,jdbcType=VARCHAR},#{item.genPath,jdbcType=VARCHAR},#{item.options,jdbcType=VARCHAR},
            #{item.createBy,jdbcType=VARCHAR},sysdate())
        </foreach>
    </insert>

    <insert id="insertGenTable" parameterType="GenTable" useGeneratedKeys="true" keyProperty="tableId">
        insert into gen_table
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tableName != null">table_name,</if>
            <if test="tableComment != null">table_comment,</if>
            <if test="className != null">class_name,</if>
            <if test="tplCategory != null">tpl_category,</if>
            <if test="packageName != null">package_name,</if>
            <if test="moduleName != null">module_name,</if>
            <if test="businessName != null">business_name,</if>
            <if test="functionName != null">function_name,</if>
            <if test="functionAuthor != null">function_author,</if>
            <if test="genType != null">gen_type,</if>
            <if test="genPath != null">gen_path,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="remark != null">remark,</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tableName != null">#{tableName,jdbcType=VARCHAR},</if>
            <if test="tableComment != null">#{tableComment,jdbcType=VARCHAR},</if>
            <if test="className != null">#{className,jdbcType=VARCHAR},</if>
            <if test="tplCategory != null">#{tplCategory,jdbcType=VARCHAR},</if>
            <if test="packageName != null">#{packageName,jdbcType=VARCHAR},</if>
            <if test="moduleName != null">#{moduleName,jdbcType=VARCHAR},</if>
            <if test="businessName != null">#{businessName,jdbcType=VARCHAR},</if>
            <if test="functionName != null">#{functionName,jdbcType=VARCHAR},</if>
            <if test="functionAuthor != null">#{functionAuthor,jdbcType=VARCHAR},</if>
            <if test="genType != null">#{genType,jdbcType=CHAR},</if>
            <if test="genPath != null">#{genPath,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy,jdbcType=VARCHAR},</if>
            <if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <!-- 可变参数，这里默认增加0是为了防止可变参数为空，为空时执行
         delete from gen_table WHERE table_id in( 0 ) -->
    <delete id="deleteByIds" parameterType="Long[]">
        delete from gen_table
        WHERE table_id in(
            <trim suffixOverrides=",">
                0,
                <foreach collection="array" item="tableId" separator=",">
                    #{tableId}
                </foreach>
            </trim>
        )
    </delete>

    <update id="updateGenTable" parameterType="GenTable">
        update gen_table
        <set>
            <if test="tableName != null and tableName != ''">table_name=#{tableName},</if>
            <if test="tableComment != null and tableComment != ''">table_comment=#{tableComment},</if>
            <if test="subTableName != null and subTableName != ''">sub_table_name=#{subTableName},</if>
            <if test="subTableFkName != null and subTableFkName != ''">sub_table_fk_name=#{subTableFkName},</if>
            <if test="className != null and className != ''">class_name=#{className},</if>
            <if test="tplCategory != null and tplCategory != ''">tpl_category=#{tplCategory},</if>
            <if test="packageName != null and packageName != ''">package_name=#{packageName},</if>
            <if test="moduleName != null and moduleName != ''">module_name=#{moduleName},</if>
            <if test="businessName != null and businessName != ''">business_name=#{businessName},</if>
            <if test="functionName != null and functionName != ''">function_name=#{functionName},</if>
            <if test="functionAuthor != null and functionAuthor != ''">function_author=#{functionAuthor},</if>
            <if test="genType != null and genType != ''">gen_type=#{genType},</if>
            <if test="genPath != null and genPath != ''">gen_path=#{genPath},</if>
            <if test="options != null and options != ''">options=#{options},</if>
            <if test="createBy != null and createBy != ''">create_by=#{createBy},</if>
            <if test="createTime != null and createTime != ''">create_time=#{createTime},</if>
            <if test="updateBy != null and updateBy != ''">update_by=#{updateBy},</if>
            <if test="updateTime != null and updateTime != ''">update_time=#{updateTime},</if>
            <if test="remark != null">remark=#{remark},</if>
        </set>
        where table_id = #{tableId}
    </update>

    <select id="selectGenTableAll" resultMap="BaseResultMap">
        select t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.gen_type, t.gen_path, t.options,  t.remark,
               c.column_id, c.table_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
        from gen_table as t
            left join gen_table_column as c on t.table_id = c.table_id
        order by c.sort
    </select>

    <select id="selectGenTableList" parameterType="GenTable" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from gen_table
        <where>
            <if test="tableName !=null and tableName !=''">
                AND lower(table_name) like concat('%',lower(#{tableName}),'%')
            </if>
            <if test="tableComment !=null and tableComment !=''">
                AND lower(table_comment) like concat('%',lower(#{tableComment}),'%')
            </if>
            <if test="params.beginTime !=null and params.beginTime != ''">
                AND date_format(create_time,'%y%m%d') >= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime !=null and params.endTime != ''">
                AND date_format(create_time,'%y%m%d') <![CDATA[<=]]> date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>

    <select id="selectDbTableList" parameterType="GenTable" resultMap="BaseResultMap">
        select TABLE_NAME,TABLE_COMMENT,create_time, update_time
        from information_schema.TABLES
        where TABLE_SCHEMA = (select database())
            and TABLE_NAME not LIKE 'qrtz_%' and TABLE_NAME not LIKE 'gen_%'
            and TABLE_NAME not in(select table_name from gen_table)
        <if test=" tableName != null and tableName !=''">
            AND lower(table_name) like concat('%',lower(#{tableName}),'%')
        </if>
        <if test="tableComment !=null and tableComment !=''">
            AND lower(table_comment) like concat('%',lower(#{tableComment}),'%')
        </if>
        <if test="params.beginTime !=null and params.beginTime != ''">
            AND date_format(create_time,'%y%m%d') >= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime !=null and params.endTime != ''">
            AND date_format(create_time,'%y%m%d') <![CDATA[<=]]> date_format(#{params.endTime},'%y%m%d')
        </if>
    </select>

    <select id="selectGenTableByName" parameterType="String" resultMap="BaseResultMap">
        select t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.gen_type, t.gen_path, t.options,  t.remark,
               c.column_id, c.table_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
        from gen_table as t
            left join gen_table_column as c on t.table_id = c.table_id
        where
            t.table_name = #{tableName}
        order by c.sort limit 1
    </select>

    <select id="selectGenTableById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select t.table_id, t.table_name, t.table_comment, t.sub_table_name, t.sub_table_fk_name, t.class_name, t.tpl_category, t.package_name, t.module_name, t.business_name, t.function_name, t.function_author, t.gen_type, t.gen_path, t.options,  t.remark,
               c.column_id, c.table_id, c.column_name, c.column_comment, c.column_type, c.java_type, c.java_field, c.is_pk, c.is_increment, c.is_required, c.is_insert, c.is_edit, c.is_list, c.is_query, c.query_type, c.html_type, c.dict_type, c.sort
        from gen_table as t
                 left join gen_table_column as c on t.table_id = c.table_id
        where t.table_id = #{tableId}
        order by c.sort
    </select>

    <select id="selectDbTableListByNames" parameterType="collection" resultMap="BaseResultMap">
        select table_name, table_comment, create_time, update_time
        from information_schema.tables
        where table_schema = (select database())
            and table_name not like 'qrtz_%' and table_name not like 'gen_%'
            and table_name IN(
                <trim suffixOverrides=",">
                    '',
                    <if test="array != null">
                        <foreach collection="array" item="tableName" separator=",">
                            #{tableName}
                        </foreach>
                    </if>
                </trim>
            )
    </select>


</mapper>
